(function(){"use strict";const g={HS256:"SHA-256",HS384:"SHA-384",HS512:"SHA-512"},i=new TextEncoder,d=(o,r)=>{const n={name:"HMAC",hash:o},e=i.encode(r);return async a=>{try{const t=await crypto.subtle.importKey("raw",i.encode(a),n,!1,["sign"]),s=await crypto.subtle.sign(n.name,t,e);return btoa(String.fromCharCode(...new Uint8Array(s))).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}catch(t){return console.warn(t),""}}};onmessage=o=>{const{algorithm:r,token:n,words:e,id:a}=o.data;console.debug(`Worker ${a} received ${e.length} words`);const[t,s,l]=n.split("."),u=`${t}.${s}`,h=d(g[r],u);Promise.all(e.map(async c=>{await h(c)===l&&(console.info("Secret found :",c),postMessage({secretFound:c}))})).then(()=>postMessage({isDone:!0,batchSize:e.length,sample:e[0]}))}})();
